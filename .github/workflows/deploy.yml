name: Fullstack App Deployment to EC2

on:
  push:
    branches:
      - main # Runs only when you push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout code from GitHub ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Setup Node.js ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # --- Verify required secrets ---
      - name: Verify required secrets
        run: |
          echo "🔍 Checking required secrets..."
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "❌ Missing secret: EC2_HOST"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_USER }}" ]; then
            echo "❌ Missing secret: EC2_USER"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "❌ Missing secret: EC2_SSH_KEY"
            exit 1
          fi
          echo "✅ All required secrets found"

      # --- Configure SSH Key Manually ---
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "✅ SSH key configured successfully"

      # --- (Optional) SSH Agent setup for compatibility ---
      - name: Add SSH key to agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # --- Deploy to EC2 ---
      - name: Deploy to EC2 Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "🚀 Starting deployment..."

            # Go to existing app directory
            APP_DIR="/home/${{ secrets.EC2_USER }}/workshop-registration-github-Actions"

            cd "$APP_DIR"

            echo "📥 Pulling latest changes..."
            git reset --hard
            git pull origin main

            echo "📦 Installing dependencies..."
            npm ci

            echo "🏗️ Building frontend..."
            npm run build

            echo "🧩 Updating .env file..."
            cat > .env <<EOL
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}

            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            FROM_EMAIL=${{ secrets.FROM_EMAIL }}
            FROM_NAME=${{ secrets.FROM_NAME }}

            PORT=${{ secrets.PORT }}
            API_BASE_URL=${{ secrets.API_BASE_URL }}
            EOL

            echo "🐳 Cleaning up old Docker containers..."
            docker stop workshop-app || true
            docker rm workshop-app || true
            docker rmi workshop-app:latest || true

            echo "🔨 Building new Docker image..."
            docker build -t workshop-app:latest .

            echo "🚀 Starting updated container..."
            docker run -d \
              --name workshop-app \
              -p 3000:3000 \
              -p 5000:5000 \
              --env-file .env \
              --restart unless-stopped \
              workshop-app:latest

            echo "✅ Deployment completed successfully!"
            echo "🌐 Frontend → http://${{ secrets.EC2_HOST }}:3000"
            echo "🔧 Backend  → http://${{ secrets.EC2_HOST }}:5000"

            echo "📊 Active containers:"
            docker ps | grep workshop-app || echo "⚠️ Container not running!"
          EOF
