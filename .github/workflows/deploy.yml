name: 🚀 Auto Deploy to EC2 (Backend + Frontend)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          GIT_REPO_URL: ${{ secrets.GIT_REPO_URL }}
        run: |
          echo "🔧 Starting deployment on EC2..."
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << 'EOF'
            set -e  # stop on error

            APP_DIR="/home/$EC2_USER/workshop-registration-github-Actions"

            echo "📁 Checking repository..."
            if [ ! -d "$APP_DIR/.git" ]; then
              echo "🌀 Cloning repository..."
              git clone "$GIT_REPO_URL" "$APP_DIR"
            fi

            cd "$APP_DIR"
            echo "🔄 Pulling latest code..."
            git fetch origin main
            git reset --hard origin/main

            echo "🧹 Cleaning old backend container..."
            sudo docker stop workshop-backend >/dev/null 2>&1 || true
            sudo docker rm workshop-backend >/dev/null 2>&1 || true

            echo "🐳 Building backend Docker image..."
            sudo docker build -t workshop-backend:latest .

            echo "🚀 Starting backend container..."
            sudo docker run -d \
              --name workshop-backend \
              -p 5000:5000 \
              --env-file .env \
              --restart unless-stopped \
              workshop-backend:latest || { echo "❌ Backend failed to start"; exit 1; }

            echo "🔍 Checking backend container status..."
            sudo docker ps | grep workshop-backend || { echo "❌ Backend not running"; exit 1; }

            echo "📦 Installing frontend..."
            npm ci --prefer-offline --no-audit --progress=false

            echo "⚙️ Building frontend..."
            npm run build

            echo "🌐 Starting frontend (Nuxt) on port 3000..."
            pkill -f 'node .output/server/index.mjs' >/dev/null 2>&1 || true
            nohup npm run preview -- --port 3000 > ~/frontend.log 2>&1 &

            sleep 5
            pgrep -f 'node .output/server/index.mjs' >/dev/null && echo "✅ Frontend running" || { echo "❌ Frontend failed"; exit 1; }

            echo "✅ Deployment complete!"
            echo "Backend → http://$EC2_HOST:5000"
            echo "Frontend → http://$EC2_HOST:3000"
          EOF
