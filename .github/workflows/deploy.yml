name: Fullstack App Deployment to EC2

on:
  push:
    branches:
      - main # Runs only when you push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # --- Checkout code from GitHub ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Setup Node.js ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # --- Verify required secrets ---
      - name: Verify required secrets
        run: |
          for secret in EC2_HOST EC2_USER EC2_SSH_KEY; do
            if [ -z "${{ secrets[$secret] }}" ]; then
              echo "‚ùå Missing secret: $secret"
              exit 1
            fi
          done
          echo "‚úÖ All required secrets found"

      # --- Configure SSH Agent ---
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # --- Deploy to EC2 ---
      - name: Deploy to EC2 Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "üöÄ Starting deployment..."

            # Go to existing app directory
            APP_DIR="/home/${{ secrets.EC2_USER }}/workshop-registration"
            cd "$APP_DIR"

            echo "üì• Pulling latest changes..."
            git reset --hard
            git pull origin main

            echo "üì¶ Installing dependencies..."
            npm ci

            echo "üèóÔ∏è Building frontend..."
            npm run build

            echo "üß© Updating .env file..."
            cat > .env <<EOL
DB_HOST=${{ secrets.DB_HOST }}
DB_USER=${{ secrets.DB_USER }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
DB_NAME=${{ secrets.DB_NAME }}

SMTP_HOST=${{ secrets.SMTP_HOST }}
SMTP_PORT=${{ secrets.SMTP_PORT }}
SMTP_USER=${{ secrets.SMTP_USER }}
SMTP_PASS=${{ secrets.SMTP_PASS }}
FROM_EMAIL=${{ secrets.FROM_EMAIL }}
FROM_NAME=${{ secrets.FROM_NAME }}

PORT=${{ secrets.PORT }}
API_BASE_URL=${{ secrets.API_BASE_URL }}
EOL

            echo "üê≥ Cleaning up old Docker containers..."
            docker stop workshop-app || true
            docker rm workshop-app || true
            docker rmi workshop-app:latest || true

            echo "üî® Building new Docker image..."
            docker build -t workshop-app:latest .

            echo "üöÄ Starting updated container..."
            docker run -d \
              --name workshop-app \
              -p 3000:3000 \
              -p 5000:5000 \
              --env-file .env \
              --restart unless-stopped \
              workshop-app:latest

            echo "‚úÖ Deployment completed successfully!"
            echo "üåê Frontend ‚Üí http://${{ secrets.EC2_HOST }}:3000"
            echo "üîß Backend  ‚Üí http://${{ secrets.EC2_HOST }}:5000"

            echo "üìä Active containers:"
            docker ps | grep workshop-app || echo "‚ö†Ô∏è Container not running!"
          EOF
